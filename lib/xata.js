"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getXataClient = exports.XataClient = void 0;
// Generated by Xata Codegen 0.29.3. Please do not edit.
const client_1 = require("@xata.io/client");
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
  { name: "Guild", columns: [{ name: "memberCountChannel", type: "string" }] },
  {
    name: "Profile",
    columns: [
      {
        name: "guildID",
        type: "string",
        notNull: true,
        defaultValue: "guildID",
      },
      { name: "userID", type: "string", notNull: true, defaultValue: "userID" },
      { name: "birth_day", type: "int" },
      { name: "birth_month", type: "int" },
      { name: "birth_year", type: "int" },
    ],
  },
  {
    name: "LatestYouTubeVideo",
    columns: [
      { name: "channelID", type: "string", unique: true },
      { name: "videoID", type: "string", unique: true },
    ],
  },
];
/** @type { import('@xata.io/client').ClientConstructor<{}> } */
const DatabaseClient = (0, client_1.buildClient)();
const defaultOptions = {
  databaseURL:
    "https://Neesh-s-workspace-tcjig6.eu-west-1.xata.sh/db/ShantaBot",
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
exports.XataClient = XataClient;
let instance = undefined;
/** @type { () => XataClient } */
const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient();
  return instance;
};
exports.getXataClient = getXataClient;
